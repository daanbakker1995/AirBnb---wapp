@page
@model AirBnb.Pages.Listings.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index Overview</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Listings[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Listings[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Listings[0].HostId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Listings[0].HostName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Listings[0].NeighbourhoodCleansed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Listings[0].PropertyType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Listings[0].RoomType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Listings[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Listings[0].MinimumNights)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Listings[0].MaximumNights)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <!--<distributed-cache name="listings-cache" expires-after="@TimeSpan.FromSeconds(60)">-->
        @foreach (var item in Model.Listings)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HostId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HostName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NeighbourhoodCleansed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PropertyType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoomType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MinimumNights)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaximumNights)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
        <!--</distributed-cache>-->
    </tbody>
</table>
@*
   Razor comment block
   Start of paginating code in view
*@

@{
    var prevDisabled = !Model.Listings.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Listings.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-pageIndex="@(Model.Listings.PageIndex - 1)"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-pageIndex="@(Model.Listings.PageIndex + 1)"
   class="btn btn-primary @nextDisabled">
    Next
</a>
